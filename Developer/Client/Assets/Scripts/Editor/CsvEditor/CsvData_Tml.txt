/********************************************************************
类    名:   CsvData_#CLASS_NAME#
作    者:	自动生成
描    述:	
*********************************************************************/
using UnityEngine;
using System.Collections.Generic;
using Framework.Data;
using Framework.Core;
using Framework.Base;
namespace TopGame.Data
{
	[Framework.Plugin.AT.ATExportMono("配置数据/#CLASS_NAME#", "TopGame.Data.DataManager.getInstance().#CLASS_NAME#")]
    public partial class CsvData_#CLASS_NAME# : Data_Base
    {
		[Framework.Plugin.AT.ATExportMono("配置数据/#CLASS_NAME#/#CLASS_NAME#Data")]
		public partial class #CLASS_NAME#Data : BaseData
		{
			#PROP_FIELD#
		}
		Dictionary<#DATA_KEY#, #CLASS_NAME#Data> m_vData = new Dictionary<#DATA_KEY#, #CLASS_NAME#Data>();
		//-------------------------------------------
		[Framework.Plugin.AT.ATField("数据列表")]
		public Dictionary<#DATA_KEY#, #CLASS_NAME#Data> datas
		{
			get{ return m_vData;}
		}
        //-------------------------------------------
        public CsvData_#CLASS_NAME#()
        {
			Framework.Plugin.AT.AgentTreeManager.getInstance().RegisterClass(this);
        }
		//-------------------------------------------
		#GENE_FUNCS#
		//-------------------------------------------
		[Framework.Plugin.AT.ATMethod("查找数据")]
		public #CLASS_NAME#Data GetData(#DATA_KEY# id)
		{
			#CLASS_NAME#Data outData;
			if(m_vData.TryGetValue(id, out outData))
				return outData;
			return null;
		}
        //-------------------------------------------
        public override bool LoadData(string strContext,CsvParser csv = null)
        {
			if(csv == null) csv = new CsvParser();
			if(!csv.LoadTableString(strContext))
				return false;
			
			ClearData();
			
			int i = csv.GetTitleLine();
			if(i < 0) return false;
			
			int nLineCnt = csv.GetLineCount();
			for(i++; i < nLineCnt; i++)
			{
				if(!csv[i]["#PROP_KEY#"].IsValid()) continue;
				
				#CLASS_NAME#Data data = new #CLASS_NAME#Data();
				
				#PARSE_FIELD#
				
				m_vData.Add(#USE_KEY#, data);
				OnAddData(data);
			}
			OnLoadCompleted();
            return true;
        }
        //-------------------------------------------
        public override void ClearData()
        {
			m_vData.Clear();
			base.ClearData();
        }
    }
}