// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/items/ItemMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto3 {

  /// <summary>Holder for reflection information generated from proto/items/ItemMessage.proto</summary>
  public static partial class ItemMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/items/ItemMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1wcm90by9pdGVtcy9JdGVtTWVzc2FnZS5wcm90bxogcHJvdG8vY29tbW9u",
            "L0NvbW1vbk1lc3NhZ2UucHJvdG8iPQoRSXRlbUluZm9zUmVzcG9uc2USDgoG",
            "dXNlcklEGAEgASgDEhgKBWl0ZW1zGAIgAygLMgkuSXRlbURhdGEiYgoQSXRl",
            "bURpcnR5UmVxdWVzdBIOCgZ1c2VySUQYASABKAMSJAoKY2hhbmdlVHlwZRgC",
            "IAEoDjIQLkVJdGVtQ2hhbmdlVHlwZRIYCgVpdGVtcxgDIAMoCzIJLkl0ZW1E",
            "YXRhImMKEUl0ZW1EaXJ0eVJlc3BvbnNlEg4KBnVzZXJJRBgBIAEoAxIkCgpj",
            "aGFuZ2VUeXBlGAIgASgOMhAuRUl0ZW1DaGFuZ2VUeXBlEhgKBWl0ZW1zGAMg",
            "AygLMgkuSXRlbURhdGEiZgoQT3BlbkNoZXN0UmVxdWVzdBIOCgZ1c2VySUQY",
            "ASABKAMSDwoHY2hlc3RJZBgCIAEoBRIRCgljaGVzdEd1aWQYAyABKAUSDwoH",
            "b3BlblBvcxgEIAEoBRINCgVpc0dldBgFIAEoCCJ1ChFPcGVuQ2hlc3RSZXNw",
            "b25zZRIOCgZ1c2VySUQYASABKAMSGwoIaXRlbURhdGEYAiABKAsyCS5JdGVt",
            "RGF0YRIYCgVpdGVtcxgDIAMoCzIJLktleVZhbHVlEhkKBmVxdWlwcxgEIAMo",
            "CzIJLktleVZhbHVlIksKFUJ1eUFjdGlvblBvaW50UmVxdWVzdBIOCgZ1c2Vy",
            "SUQYASABKAMSIgoEdHlwZRgCIAEoDjIULkVCdXlBY3Rpb25Qb2ludFR5cGUi",
            "QgoWQnV5QWN0aW9uUG9pbnRSZXNwb25zZRIOCgZ1c2VySUQYASABKAMSGAoF",
            "aXRlbXMYAiADKAsyCS5LZXlWYWx1ZSo/Cg9FSXRlbUNoYW5nZVR5cGUSBwoD",
            "QWRkEAASCgoGUmVtb3ZlEAESCwoHUmVwbGFjZRACEgoKBlVwZGF0ZRADKioK",
            "E0VCdXlBY3Rpb25Qb2ludFR5cGUSCwoHRGlhbW9uZBAAEgYKAkFEEAFCIwoY",
            "Y29tLnRvcGdhbWUubWVzc2FnZS5oYWxsqgIGUHJvdG8zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto3.CommonMessageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Proto3.EItemChangeType), typeof(global::Proto3.EBuyActionPointType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.ItemInfosResponse), global::Proto3.ItemInfosResponse.Parser, new[]{ "UserID", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.ItemDirtyRequest), global::Proto3.ItemDirtyRequest.Parser, new[]{ "UserID", "ChangeType", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.ItemDirtyResponse), global::Proto3.ItemDirtyResponse.Parser, new[]{ "UserID", "ChangeType", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.OpenChestRequest), global::Proto3.OpenChestRequest.Parser, new[]{ "UserID", "ChestId", "ChestGuid", "OpenPos", "IsGet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.OpenChestResponse), global::Proto3.OpenChestResponse.Parser, new[]{ "UserID", "ItemData", "Items", "Equips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.BuyActionPointRequest), global::Proto3.BuyActionPointRequest.Parser, new[]{ "UserID", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.BuyActionPointResponse), global::Proto3.BuyActionPointResponse.Parser, new[]{ "UserID", "Items" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EItemChangeType {
    /// <summary>
    ///添加
    /// </summary>
    [pbr::OriginalName("Add")] Add = 0,
    /// <summary>
    ///移除
    /// </summary>
    [pbr::OriginalName("Remove")] Remove = 1,
    [pbr::OriginalName("Replace")] Replace = 2,
    /// <summary>
    ///更新
    /// </summary>
    [pbr::OriginalName("Update")] Update = 3,
  }

  public enum EBuyActionPointType {
    /// <summary>
    ///钻石
    /// </summary>
    [pbr::OriginalName("Diamond")] Diamond = 0,
    /// <summary>
    ///广告
    /// </summary>
    [pbr::OriginalName("AD")] Ad = 1,
  }

  #endregion

  #region Messages
  public sealed partial class ItemInfosResponse : pb::IMessage<ItemInfosResponse> {
    private static readonly pb::MessageParser<ItemInfosResponse> _parser = new pb::MessageParser<ItemInfosResponse>(() => new ItemInfosResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemInfosResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.ItemMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfosResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfosResponse(ItemInfosResponse other) : this() {
      userID_ = other.userID_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfosResponse Clone() {
      return new ItemInfosResponse(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Proto3.ItemData> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Proto3.ItemData.Parser);
    private readonly pbc::RepeatedField<global::Proto3.ItemData> items_ = new pbc::RepeatedField<global::Proto3.ItemData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto3.ItemData> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemInfosResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemInfosResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemInfosResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemDirtyRequest : pb::IMessage<ItemDirtyRequest> {
    private static readonly pb::MessageParser<ItemDirtyRequest> _parser = new pb::MessageParser<ItemDirtyRequest>(() => new ItemDirtyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemDirtyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.ItemMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemDirtyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemDirtyRequest(ItemDirtyRequest other) : this() {
      userID_ = other.userID_;
      changeType_ = other.changeType_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemDirtyRequest Clone() {
      return new ItemDirtyRequest(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "changeType" field.</summary>
    public const int ChangeTypeFieldNumber = 2;
    private global::Proto3.EItemChangeType changeType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto3.EItemChangeType ChangeType {
      get { return changeType_; }
      set {
        changeType_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Proto3.ItemData> _repeated_items_codec
        = pb::FieldCodec.ForMessage(26, global::Proto3.ItemData.Parser);
    private readonly pbc::RepeatedField<global::Proto3.ItemData> items_ = new pbc::RepeatedField<global::Proto3.ItemData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto3.ItemData> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemDirtyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemDirtyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (ChangeType != other.ChangeType) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (ChangeType != 0) hash ^= ChangeType.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (ChangeType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ChangeType);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (ChangeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChangeType);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemDirtyRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.ChangeType != 0) {
        ChangeType = other.ChangeType;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            changeType_ = (global::Proto3.EItemChangeType) input.ReadEnum();
            break;
          }
          case 26: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemDirtyResponse : pb::IMessage<ItemDirtyResponse> {
    private static readonly pb::MessageParser<ItemDirtyResponse> _parser = new pb::MessageParser<ItemDirtyResponse>(() => new ItemDirtyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemDirtyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.ItemMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemDirtyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemDirtyResponse(ItemDirtyResponse other) : this() {
      userID_ = other.userID_;
      changeType_ = other.changeType_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemDirtyResponse Clone() {
      return new ItemDirtyResponse(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "changeType" field.</summary>
    public const int ChangeTypeFieldNumber = 2;
    private global::Proto3.EItemChangeType changeType_ = 0;
    /// <summary>
    ///0-数量变化,2-
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto3.EItemChangeType ChangeType {
      get { return changeType_; }
      set {
        changeType_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Proto3.ItemData> _repeated_items_codec
        = pb::FieldCodec.ForMessage(26, global::Proto3.ItemData.Parser);
    private readonly pbc::RepeatedField<global::Proto3.ItemData> items_ = new pbc::RepeatedField<global::Proto3.ItemData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto3.ItemData> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemDirtyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemDirtyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (ChangeType != other.ChangeType) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (ChangeType != 0) hash ^= ChangeType.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (ChangeType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ChangeType);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (ChangeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChangeType);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemDirtyResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.ChangeType != 0) {
        ChangeType = other.ChangeType;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            changeType_ = (global::Proto3.EItemChangeType) input.ReadEnum();
            break;
          }
          case 26: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OpenChestRequest : pb::IMessage<OpenChestRequest> {
    private static readonly pb::MessageParser<OpenChestRequest> _parser = new pb::MessageParser<OpenChestRequest>(() => new OpenChestRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenChestRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.ItemMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenChestRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenChestRequest(OpenChestRequest other) : this() {
      userID_ = other.userID_;
      chestId_ = other.chestId_;
      chestGuid_ = other.chestGuid_;
      openPos_ = other.openPos_;
      isGet_ = other.isGet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenChestRequest Clone() {
      return new OpenChestRequest(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "chestId" field.</summary>
    public const int ChestIdFieldNumber = 2;
    private int chestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChestId {
      get { return chestId_; }
      set {
        chestId_ = value;
      }
    }

    /// <summary>Field number for the "chestGuid" field.</summary>
    public const int ChestGuidFieldNumber = 3;
    private int chestGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChestGuid {
      get { return chestGuid_; }
      set {
        chestGuid_ = value;
      }
    }

    /// <summary>Field number for the "openPos" field.</summary>
    public const int OpenPosFieldNumber = 4;
    private int openPos_;
    /// <summary>
    /// 打开位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OpenPos {
      get { return openPos_; }
      set {
        openPos_ = value;
      }
    }

    /// <summary>Field number for the "isGet" field.</summary>
    public const int IsGetFieldNumber = 5;
    private bool isGet_;
    /// <summary>
    /// 是否立即打开
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGet {
      get { return isGet_; }
      set {
        isGet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenChestRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenChestRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (ChestId != other.ChestId) return false;
      if (ChestGuid != other.ChestGuid) return false;
      if (OpenPos != other.OpenPos) return false;
      if (IsGet != other.IsGet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (ChestId != 0) hash ^= ChestId.GetHashCode();
      if (ChestGuid != 0) hash ^= ChestGuid.GetHashCode();
      if (OpenPos != 0) hash ^= OpenPos.GetHashCode();
      if (IsGet != false) hash ^= IsGet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (ChestId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChestId);
      }
      if (ChestGuid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChestGuid);
      }
      if (OpenPos != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OpenPos);
      }
      if (IsGet != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsGet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (ChestId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChestId);
      }
      if (ChestGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChestGuid);
      }
      if (OpenPos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OpenPos);
      }
      if (IsGet != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenChestRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.ChestId != 0) {
        ChestId = other.ChestId;
      }
      if (other.ChestGuid != 0) {
        ChestGuid = other.ChestGuid;
      }
      if (other.OpenPos != 0) {
        OpenPos = other.OpenPos;
      }
      if (other.IsGet != false) {
        IsGet = other.IsGet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            ChestId = input.ReadInt32();
            break;
          }
          case 24: {
            ChestGuid = input.ReadInt32();
            break;
          }
          case 32: {
            OpenPos = input.ReadInt32();
            break;
          }
          case 40: {
            IsGet = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OpenChestResponse : pb::IMessage<OpenChestResponse> {
    private static readonly pb::MessageParser<OpenChestResponse> _parser = new pb::MessageParser<OpenChestResponse>(() => new OpenChestResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenChestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.ItemMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenChestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenChestResponse(OpenChestResponse other) : this() {
      userID_ = other.userID_;
      itemData_ = other.itemData_ != null ? other.itemData_.Clone() : null;
      items_ = other.items_.Clone();
      equips_ = other.equips_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenChestResponse Clone() {
      return new OpenChestResponse(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "itemData" field.</summary>
    public const int ItemDataFieldNumber = 2;
    private global::Proto3.ItemData itemData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto3.ItemData ItemData {
      get { return itemData_; }
      set {
        itemData_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Proto3.KeyValue> _repeated_items_codec
        = pb::FieldCodec.ForMessage(26, global::Proto3.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Proto3.KeyValue> items_ = new pbc::RepeatedField<global::Proto3.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto3.KeyValue> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "equips" field.</summary>
    public const int EquipsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Proto3.KeyValue> _repeated_equips_codec
        = pb::FieldCodec.ForMessage(34, global::Proto3.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Proto3.KeyValue> equips_ = new pbc::RepeatedField<global::Proto3.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto3.KeyValue> Equips {
      get { return equips_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenChestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenChestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (!object.Equals(ItemData, other.ItemData)) return false;
      if(!items_.Equals(other.items_)) return false;
      if(!equips_.Equals(other.equips_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (itemData_ != null) hash ^= ItemData.GetHashCode();
      hash ^= items_.GetHashCode();
      hash ^= equips_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (itemData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ItemData);
      }
      items_.WriteTo(output, _repeated_items_codec);
      equips_.WriteTo(output, _repeated_equips_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (itemData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemData);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      size += equips_.CalculateSize(_repeated_equips_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenChestResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.itemData_ != null) {
        if (itemData_ == null) {
          itemData_ = new global::Proto3.ItemData();
        }
        ItemData.MergeFrom(other.ItemData);
      }
      items_.Add(other.items_);
      equips_.Add(other.equips_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 18: {
            if (itemData_ == null) {
              itemData_ = new global::Proto3.ItemData();
            }
            input.ReadMessage(itemData_);
            break;
          }
          case 26: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 34: {
            equips_.AddEntriesFrom(input, _repeated_equips_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuyActionPointRequest : pb::IMessage<BuyActionPointRequest> {
    private static readonly pb::MessageParser<BuyActionPointRequest> _parser = new pb::MessageParser<BuyActionPointRequest>(() => new BuyActionPointRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyActionPointRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.ItemMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyActionPointRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyActionPointRequest(BuyActionPointRequest other) : this() {
      userID_ = other.userID_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyActionPointRequest Clone() {
      return new BuyActionPointRequest(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Proto3.EBuyActionPointType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto3.EBuyActionPointType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyActionPointRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyActionPointRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyActionPointRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            type_ = (global::Proto3.EBuyActionPointType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuyActionPointResponse : pb::IMessage<BuyActionPointResponse> {
    private static readonly pb::MessageParser<BuyActionPointResponse> _parser = new pb::MessageParser<BuyActionPointResponse>(() => new BuyActionPointResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyActionPointResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.ItemMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyActionPointResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyActionPointResponse(BuyActionPointResponse other) : this() {
      userID_ = other.userID_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyActionPointResponse Clone() {
      return new BuyActionPointResponse(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Proto3.KeyValue> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Proto3.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Proto3.KeyValue> items_ = new pbc::RepeatedField<global::Proto3.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto3.KeyValue> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyActionPointResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyActionPointResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyActionPointResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
