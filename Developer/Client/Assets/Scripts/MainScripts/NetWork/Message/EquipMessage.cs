// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/equip/EquipMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto3 {

  /// <summary>Holder for reflection information generated from proto/equip/EquipMessage.proto</summary>
  public static partial class EquipMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/equip/EquipMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EquipMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5wcm90by9lcXVpcC9FcXVpcE1lc3NhZ2UucHJvdG8aIHByb3RvL2NvbW1v",
            "bi9Db21tb25NZXNzYWdlLnByb3RvIkAKEkVxdWlwSW5mb3NSZXNwb25zZRIO",
            "CgZ1c2VySUQYASABKAMSGgoGZXF1aXBzGAIgAygLMgouRXF1aXBEYXRhIlgK",
            "EEhlcm9FcXVpcFJlcXVlc3QSDgoGdXNlcklEGAEgASgDEhAKCGhlcm9HdWlk",
            "GAIgASgFEhEKCWVxdWlwR3VpZBgDIAEoBRIPCgdlcXVpcGVkGAQgASgIIlkK",
            "EUhlcm9FcXVpcFJlc3BvbnNlEg4KBnVzZXJJRBgBIAEoAxIQCghoZXJvR3Vp",
            "ZBgCIAEoBRIRCgllcXVpcEd1aWQYAyABKAUSDwoHZXF1aXBlZBgEIAEoCCI5",
            "ChZIZXJvRXF1aXBVbmxvY2tSZXF1ZXN0Eg4KBnVzZXJJRBgBIAEoAxIPCgdl",
            "cXVpcElkGAIgASgFIkgKF0hlcm9FcXVpcFVubG9ja1Jlc3BvbnNlEg4KBnVz",
            "ZXJJRBgBIAEoAxIdCgllcXVpcERhdGEYAiABKAsyCi5FcXVpcERhdGEiZgoR",
            "RXF1aXBEaXJ0eVJlcXVlc3QSDgoGdXNlcklEGAEgASgDEiUKCmNoYW5nZVR5",
            "cGUYAiABKA4yES5FRXF1aXBDaGFuZ2VUeXBlEhoKBmVxdWlwcxgDIAMoCzIK",
            "LkVxdWlwRGF0YSJnChJFcXVpcERpcnR5UmVzcG9uc2USDgoGdXNlcklEGAEg",
            "ASgDEiUKCmNoYW5nZVR5cGUYAiABKA4yES5FRXF1aXBDaGFuZ2VUeXBlEhoK",
            "BmVxdWlwcxgDIAMoCzIKLkVxdWlwRGF0YSI6ChdIZXJvRXF1aXBVcGdyYWRl",
            "UmVxdWVzdBIOCgZ1c2VySUQYASABKAMSDwoHZXF1aXBJZBgCIAEoBSJJChhI",
            "ZXJvRXF1aXBVcGdyYWRlUmVzcG9uc2USDgoGdXNlcklEGAEgASgDEh0KCWVx",
            "dWlwRGF0YRgCIAEoCzIKLkVxdWlwRGF0YSo0ChBFRXF1aXBDaGFuZ2VUeXBl",
            "EgcKA0FkZBAAEgoKBlJlbW92ZRABEgsKB1JlcGxhY2UQAkIjChhjb20udG9w",
            "Z2FtZS5tZXNzYWdlLmhhbGyqAgZQcm90bzNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto3.CommonMessageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Proto3.EEquipChangeType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.EquipInfosResponse), global::Proto3.EquipInfosResponse.Parser, new[]{ "UserID", "Equips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.HeroEquipRequest), global::Proto3.HeroEquipRequest.Parser, new[]{ "UserID", "HeroGuid", "EquipGuid", "Equiped" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.HeroEquipResponse), global::Proto3.HeroEquipResponse.Parser, new[]{ "UserID", "HeroGuid", "EquipGuid", "Equiped" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.HeroEquipUnlockRequest), global::Proto3.HeroEquipUnlockRequest.Parser, new[]{ "UserID", "EquipId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.HeroEquipUnlockResponse), global::Proto3.HeroEquipUnlockResponse.Parser, new[]{ "UserID", "EquipData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.EquipDirtyRequest), global::Proto3.EquipDirtyRequest.Parser, new[]{ "UserID", "ChangeType", "Equips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.EquipDirtyResponse), global::Proto3.EquipDirtyResponse.Parser, new[]{ "UserID", "ChangeType", "Equips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.HeroEquipUpgradeRequest), global::Proto3.HeroEquipUpgradeRequest.Parser, new[]{ "UserID", "EquipId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.HeroEquipUpgradeResponse), global::Proto3.HeroEquipUpgradeResponse.Parser, new[]{ "UserID", "EquipData" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EEquipChangeType {
    /// <summary>
    ///添加
    /// </summary>
    [pbr::OriginalName("Add")] Add = 0,
    /// <summary>
    ///移除
    /// </summary>
    [pbr::OriginalName("Remove")] Remove = 1,
    [pbr::OriginalName("Replace")] Replace = 2,
  }

  #endregion

  #region Messages
  public sealed partial class EquipInfosResponse : pb::IMessage<EquipInfosResponse> {
    private static readonly pb::MessageParser<EquipInfosResponse> _parser = new pb::MessageParser<EquipInfosResponse>(() => new EquipInfosResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipInfosResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.EquipMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipInfosResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipInfosResponse(EquipInfosResponse other) : this() {
      userID_ = other.userID_;
      equips_ = other.equips_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipInfosResponse Clone() {
      return new EquipInfosResponse(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "equips" field.</summary>
    public const int EquipsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Proto3.EquipData> _repeated_equips_codec
        = pb::FieldCodec.ForMessage(18, global::Proto3.EquipData.Parser);
    private readonly pbc::RepeatedField<global::Proto3.EquipData> equips_ = new pbc::RepeatedField<global::Proto3.EquipData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto3.EquipData> Equips {
      get { return equips_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipInfosResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipInfosResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if(!equips_.Equals(other.equips_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      hash ^= equips_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      equips_.WriteTo(output, _repeated_equips_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      size += equips_.CalculateSize(_repeated_equips_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipInfosResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      equips_.Add(other.equips_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 18: {
            equips_.AddEntriesFrom(input, _repeated_equips_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroEquipRequest : pb::IMessage<HeroEquipRequest> {
    private static readonly pb::MessageParser<HeroEquipRequest> _parser = new pb::MessageParser<HeroEquipRequest>(() => new HeroEquipRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroEquipRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.EquipMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipRequest(HeroEquipRequest other) : this() {
      userID_ = other.userID_;
      heroGuid_ = other.heroGuid_;
      equipGuid_ = other.equipGuid_;
      equiped_ = other.equiped_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipRequest Clone() {
      return new HeroEquipRequest(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "heroGuid" field.</summary>
    public const int HeroGuidFieldNumber = 2;
    private int heroGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroGuid {
      get { return heroGuid_; }
      set {
        heroGuid_ = value;
      }
    }

    /// <summary>Field number for the "equipGuid" field.</summary>
    public const int EquipGuidFieldNumber = 3;
    private int equipGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EquipGuid {
      get { return equipGuid_; }
      set {
        equipGuid_ = value;
      }
    }

    /// <summary>Field number for the "equiped" field.</summary>
    public const int EquipedFieldNumber = 4;
    private bool equiped_;
    /// <summary>
    ///是否装备，true 穿上，false 为脱下
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equiped {
      get { return equiped_; }
      set {
        equiped_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroEquipRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroEquipRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (HeroGuid != other.HeroGuid) return false;
      if (EquipGuid != other.EquipGuid) return false;
      if (Equiped != other.Equiped) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (HeroGuid != 0) hash ^= HeroGuid.GetHashCode();
      if (EquipGuid != 0) hash ^= EquipGuid.GetHashCode();
      if (Equiped != false) hash ^= Equiped.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (HeroGuid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HeroGuid);
      }
      if (EquipGuid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EquipGuid);
      }
      if (Equiped != false) {
        output.WriteRawTag(32);
        output.WriteBool(Equiped);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (HeroGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroGuid);
      }
      if (EquipGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipGuid);
      }
      if (Equiped != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroEquipRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.HeroGuid != 0) {
        HeroGuid = other.HeroGuid;
      }
      if (other.EquipGuid != 0) {
        EquipGuid = other.EquipGuid;
      }
      if (other.Equiped != false) {
        Equiped = other.Equiped;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            HeroGuid = input.ReadInt32();
            break;
          }
          case 24: {
            EquipGuid = input.ReadInt32();
            break;
          }
          case 32: {
            Equiped = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroEquipResponse : pb::IMessage<HeroEquipResponse> {
    private static readonly pb::MessageParser<HeroEquipResponse> _parser = new pb::MessageParser<HeroEquipResponse>(() => new HeroEquipResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroEquipResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.EquipMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipResponse(HeroEquipResponse other) : this() {
      userID_ = other.userID_;
      heroGuid_ = other.heroGuid_;
      equipGuid_ = other.equipGuid_;
      equiped_ = other.equiped_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipResponse Clone() {
      return new HeroEquipResponse(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "heroGuid" field.</summary>
    public const int HeroGuidFieldNumber = 2;
    private int heroGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroGuid {
      get { return heroGuid_; }
      set {
        heroGuid_ = value;
      }
    }

    /// <summary>Field number for the "equipGuid" field.</summary>
    public const int EquipGuidFieldNumber = 3;
    private int equipGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EquipGuid {
      get { return equipGuid_; }
      set {
        equipGuid_ = value;
      }
    }

    /// <summary>Field number for the "equiped" field.</summary>
    public const int EquipedFieldNumber = 4;
    private bool equiped_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equiped {
      get { return equiped_; }
      set {
        equiped_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroEquipResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroEquipResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (HeroGuid != other.HeroGuid) return false;
      if (EquipGuid != other.EquipGuid) return false;
      if (Equiped != other.Equiped) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (HeroGuid != 0) hash ^= HeroGuid.GetHashCode();
      if (EquipGuid != 0) hash ^= EquipGuid.GetHashCode();
      if (Equiped != false) hash ^= Equiped.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (HeroGuid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HeroGuid);
      }
      if (EquipGuid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EquipGuid);
      }
      if (Equiped != false) {
        output.WriteRawTag(32);
        output.WriteBool(Equiped);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (HeroGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroGuid);
      }
      if (EquipGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipGuid);
      }
      if (Equiped != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroEquipResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.HeroGuid != 0) {
        HeroGuid = other.HeroGuid;
      }
      if (other.EquipGuid != 0) {
        EquipGuid = other.EquipGuid;
      }
      if (other.Equiped != false) {
        Equiped = other.Equiped;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            HeroGuid = input.ReadInt32();
            break;
          }
          case 24: {
            EquipGuid = input.ReadInt32();
            break;
          }
          case 32: {
            Equiped = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroEquipUnlockRequest : pb::IMessage<HeroEquipUnlockRequest> {
    private static readonly pb::MessageParser<HeroEquipUnlockRequest> _parser = new pb::MessageParser<HeroEquipUnlockRequest>(() => new HeroEquipUnlockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroEquipUnlockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.EquipMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipUnlockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipUnlockRequest(HeroEquipUnlockRequest other) : this() {
      userID_ = other.userID_;
      equipId_ = other.equipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipUnlockRequest Clone() {
      return new HeroEquipUnlockRequest(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "equipId" field.</summary>
    public const int EquipIdFieldNumber = 2;
    private int equipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EquipId {
      get { return equipId_; }
      set {
        equipId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroEquipUnlockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroEquipUnlockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (EquipId != other.EquipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (EquipId != 0) hash ^= EquipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (EquipId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EquipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (EquipId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroEquipUnlockRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.EquipId != 0) {
        EquipId = other.EquipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            EquipId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroEquipUnlockResponse : pb::IMessage<HeroEquipUnlockResponse> {
    private static readonly pb::MessageParser<HeroEquipUnlockResponse> _parser = new pb::MessageParser<HeroEquipUnlockResponse>(() => new HeroEquipUnlockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroEquipUnlockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.EquipMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipUnlockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipUnlockResponse(HeroEquipUnlockResponse other) : this() {
      userID_ = other.userID_;
      equipData_ = other.equipData_ != null ? other.equipData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipUnlockResponse Clone() {
      return new HeroEquipUnlockResponse(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "equipData" field.</summary>
    public const int EquipDataFieldNumber = 2;
    private global::Proto3.EquipData equipData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto3.EquipData EquipData {
      get { return equipData_; }
      set {
        equipData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroEquipUnlockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroEquipUnlockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (!object.Equals(EquipData, other.EquipData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (equipData_ != null) hash ^= EquipData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (equipData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EquipData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (equipData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EquipData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroEquipUnlockResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.equipData_ != null) {
        if (equipData_ == null) {
          equipData_ = new global::Proto3.EquipData();
        }
        EquipData.MergeFrom(other.EquipData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 18: {
            if (equipData_ == null) {
              equipData_ = new global::Proto3.EquipData();
            }
            input.ReadMessage(equipData_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EquipDirtyRequest : pb::IMessage<EquipDirtyRequest> {
    private static readonly pb::MessageParser<EquipDirtyRequest> _parser = new pb::MessageParser<EquipDirtyRequest>(() => new EquipDirtyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipDirtyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.EquipMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipDirtyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipDirtyRequest(EquipDirtyRequest other) : this() {
      userID_ = other.userID_;
      changeType_ = other.changeType_;
      equips_ = other.equips_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipDirtyRequest Clone() {
      return new EquipDirtyRequest(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "changeType" field.</summary>
    public const int ChangeTypeFieldNumber = 2;
    private global::Proto3.EEquipChangeType changeType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto3.EEquipChangeType ChangeType {
      get { return changeType_; }
      set {
        changeType_ = value;
      }
    }

    /// <summary>Field number for the "equips" field.</summary>
    public const int EquipsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Proto3.EquipData> _repeated_equips_codec
        = pb::FieldCodec.ForMessage(26, global::Proto3.EquipData.Parser);
    private readonly pbc::RepeatedField<global::Proto3.EquipData> equips_ = new pbc::RepeatedField<global::Proto3.EquipData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto3.EquipData> Equips {
      get { return equips_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipDirtyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipDirtyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (ChangeType != other.ChangeType) return false;
      if(!equips_.Equals(other.equips_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (ChangeType != 0) hash ^= ChangeType.GetHashCode();
      hash ^= equips_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (ChangeType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ChangeType);
      }
      equips_.WriteTo(output, _repeated_equips_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (ChangeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChangeType);
      }
      size += equips_.CalculateSize(_repeated_equips_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipDirtyRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.ChangeType != 0) {
        ChangeType = other.ChangeType;
      }
      equips_.Add(other.equips_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            changeType_ = (global::Proto3.EEquipChangeType) input.ReadEnum();
            break;
          }
          case 26: {
            equips_.AddEntriesFrom(input, _repeated_equips_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EquipDirtyResponse : pb::IMessage<EquipDirtyResponse> {
    private static readonly pb::MessageParser<EquipDirtyResponse> _parser = new pb::MessageParser<EquipDirtyResponse>(() => new EquipDirtyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipDirtyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.EquipMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipDirtyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipDirtyResponse(EquipDirtyResponse other) : this() {
      userID_ = other.userID_;
      changeType_ = other.changeType_;
      equips_ = other.equips_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipDirtyResponse Clone() {
      return new EquipDirtyResponse(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "changeType" field.</summary>
    public const int ChangeTypeFieldNumber = 2;
    private global::Proto3.EEquipChangeType changeType_ = 0;
    /// <summary>
    ///0-数量变化,2-
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto3.EEquipChangeType ChangeType {
      get { return changeType_; }
      set {
        changeType_ = value;
      }
    }

    /// <summary>Field number for the "equips" field.</summary>
    public const int EquipsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Proto3.EquipData> _repeated_equips_codec
        = pb::FieldCodec.ForMessage(26, global::Proto3.EquipData.Parser);
    private readonly pbc::RepeatedField<global::Proto3.EquipData> equips_ = new pbc::RepeatedField<global::Proto3.EquipData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto3.EquipData> Equips {
      get { return equips_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipDirtyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipDirtyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (ChangeType != other.ChangeType) return false;
      if(!equips_.Equals(other.equips_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (ChangeType != 0) hash ^= ChangeType.GetHashCode();
      hash ^= equips_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (ChangeType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ChangeType);
      }
      equips_.WriteTo(output, _repeated_equips_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (ChangeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChangeType);
      }
      size += equips_.CalculateSize(_repeated_equips_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipDirtyResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.ChangeType != 0) {
        ChangeType = other.ChangeType;
      }
      equips_.Add(other.equips_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            changeType_ = (global::Proto3.EEquipChangeType) input.ReadEnum();
            break;
          }
          case 26: {
            equips_.AddEntriesFrom(input, _repeated_equips_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroEquipUpgradeRequest : pb::IMessage<HeroEquipUpgradeRequest> {
    private static readonly pb::MessageParser<HeroEquipUpgradeRequest> _parser = new pb::MessageParser<HeroEquipUpgradeRequest>(() => new HeroEquipUpgradeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroEquipUpgradeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.EquipMessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipUpgradeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipUpgradeRequest(HeroEquipUpgradeRequest other) : this() {
      userID_ = other.userID_;
      equipId_ = other.equipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipUpgradeRequest Clone() {
      return new HeroEquipUpgradeRequest(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "equipId" field.</summary>
    public const int EquipIdFieldNumber = 2;
    private int equipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EquipId {
      get { return equipId_; }
      set {
        equipId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroEquipUpgradeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroEquipUpgradeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (EquipId != other.EquipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (EquipId != 0) hash ^= EquipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (EquipId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EquipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (EquipId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroEquipUpgradeRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.EquipId != 0) {
        EquipId = other.EquipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            EquipId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroEquipUpgradeResponse : pb::IMessage<HeroEquipUpgradeResponse> {
    private static readonly pb::MessageParser<HeroEquipUpgradeResponse> _parser = new pb::MessageParser<HeroEquipUpgradeResponse>(() => new HeroEquipUpgradeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroEquipUpgradeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.EquipMessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipUpgradeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipUpgradeResponse(HeroEquipUpgradeResponse other) : this() {
      userID_ = other.userID_;
      equipData_ = other.equipData_ != null ? other.equipData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipUpgradeResponse Clone() {
      return new HeroEquipUpgradeResponse(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "equipData" field.</summary>
    public const int EquipDataFieldNumber = 2;
    private global::Proto3.EquipData equipData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto3.EquipData EquipData {
      get { return equipData_; }
      set {
        equipData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroEquipUpgradeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroEquipUpgradeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (!object.Equals(EquipData, other.EquipData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (equipData_ != null) hash ^= EquipData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (equipData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EquipData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (equipData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EquipData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroEquipUpgradeResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.equipData_ != null) {
        if (equipData_ == null) {
          equipData_ = new global::Proto3.EquipData();
        }
        EquipData.MergeFrom(other.EquipData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 18: {
            if (equipData_ == null) {
              equipData_ = new global::Proto3.EquipData();
            }
            input.ReadMessage(equipData_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
