// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/pay/PayMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto3 {

  /// <summary>Holder for reflection information generated from proto/pay/PayMessage.proto</summary>
  public static partial class PayMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/pay/PayMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PayMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpwcm90by9wYXkvUGF5TWVzc2FnZS5wcm90bxogcHJvdG8vY29tbW9uL0Nv",
            "bW1vbk1lc3NhZ2UucHJvdG8iWgoSUGF5T3JkZXJHZW5SZXF1ZXN0Eg4KBnVz",
            "ZXJJRBgBIAEoAxIPCgdnb29kc0lkGAIgASgFEg8KB2NoYW5uZWwYAyABKAkS",
            "EgoKc3ViQ2hhbm5lbBgEIAEoCSKgAQoTUGF5T3JkZXJHZW5SZXNwb25zZRIO",
            "CgZ1c2VySUQYASABKAMSDwoHZ29vZHNJZBgCIAEoBRIPCgdvcmRlcklkGAMg",
            "ASgDEg0KBXByaWNlGAQgASgDEg8KB2NoYW5uZWwYBSABKAkSEQoJc2VydmVy",
            "VXJsGAYgASgJEhIKCnN1YkNoYW5uZWwYByABKAkSEAoIc3RhbmRib3gYCCAB",
            "KAgiegoTUGF5U2RrQWN0aW9uUmVxdWVzdBIOCgZ1c2VySUQYASABKAMSDwoH",
            "b3JkZXJJZBgCIAEoAxIdCgZhY3Rpb24YAyABKA4yDS5QYXlTREtBY3Rpb24S",
            "DwoHY2hhbm5lbBgEIAEoCRISCgpzdWJDaGFubmVsGAUgASgJIrUBChRQYXlT",
            "ZGtBY3Rpb25SZXNwb25zZRIOCgZ1c2VySUQYASABKAMSDwoHb3JkZXJJZBgC",
            "IAEoAxIdCgZhY3Rpb24YAyABKA4yDS5QYXlTREtBY3Rpb24SGAoFaXRlbXMY",
            "BCADKAsyCS5JdGVtRGF0YRINCgVwcmljZRgFIAEoAxIPCgdnb29kc0lkGAYg",
            "ASgFEg8KB2NoYW5uZWwYByABKAkSEgoKc3ViQ2hhbm5lbBgIIAEoCSJkChZQ",
            "YXlTZGtDYWxsYmFja1Jlc3BvbnNlEg4KBnVzZXJJRBgBIAEoAxIPCgdvcmRl",
            "cklkGAIgASgDEhMKC3Nka19vcmRlcklkGAMgASgJEhQKDGV4dGVybl9wYXJh",
            "bRgEIAEoCSpYCgxQYXlTREtBY3Rpb24SDgoKV2FpdGluZ1BheRAAEg0KCVBh",
            "eVZlcmlmeRABEg0KCVBheVN1Y2NlcxACEgsKB1BheUZhaWwQAxINCglQYXlD",
            "YW5jZWwQBEIjChhjb20udG9wZ2FtZS5tZXNzYWdlLmhhbGyqAgZQcm90bzNi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto3.CommonMessageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Proto3.PaySDKAction), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.PayOrderGenRequest), global::Proto3.PayOrderGenRequest.Parser, new[]{ "UserID", "GoodsId", "Channel", "SubChannel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.PayOrderGenResponse), global::Proto3.PayOrderGenResponse.Parser, new[]{ "UserID", "GoodsId", "OrderId", "Price", "Channel", "ServerUrl", "SubChannel", "Standbox" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.PaySdkActionRequest), global::Proto3.PaySdkActionRequest.Parser, new[]{ "UserID", "OrderId", "Action", "Channel", "SubChannel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.PaySdkActionResponse), global::Proto3.PaySdkActionResponse.Parser, new[]{ "UserID", "OrderId", "Action", "Items", "Price", "GoodsId", "Channel", "SubChannel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto3.PaySdkCallbackResponse), global::Proto3.PaySdkCallbackResponse.Parser, new[]{ "UserID", "OrderId", "SdkOrderId", "ExternParam" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PaySDKAction {
    [pbr::OriginalName("WaitingPay")] WaitingPay = 0,
    [pbr::OriginalName("PayVerify")] PayVerify = 1,
    [pbr::OriginalName("PaySucces")] PaySucces = 2,
    [pbr::OriginalName("PayFail")] PayFail = 3,
    [pbr::OriginalName("PayCancel")] PayCancel = 4,
  }

  #endregion

  #region Messages
  public sealed partial class PayOrderGenRequest : pb::IMessage<PayOrderGenRequest> {
    private static readonly pb::MessageParser<PayOrderGenRequest> _parser = new pb::MessageParser<PayOrderGenRequest>(() => new PayOrderGenRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PayOrderGenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.PayMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayOrderGenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayOrderGenRequest(PayOrderGenRequest other) : this() {
      userID_ = other.userID_;
      goodsId_ = other.goodsId_;
      channel_ = other.channel_;
      subChannel_ = other.subChannel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayOrderGenRequest Clone() {
      return new PayOrderGenRequest(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "goodsId" field.</summary>
    public const int GoodsIdFieldNumber = 2;
    private int goodsId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodsId {
      get { return goodsId_; }
      set {
        goodsId_ = value;
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subChannel" field.</summary>
    public const int SubChannelFieldNumber = 4;
    private string subChannel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubChannel {
      get { return subChannel_; }
      set {
        subChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PayOrderGenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PayOrderGenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (GoodsId != other.GoodsId) return false;
      if (Channel != other.Channel) return false;
      if (SubChannel != other.SubChannel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (GoodsId != 0) hash ^= GoodsId.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (SubChannel.Length != 0) hash ^= SubChannel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (GoodsId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GoodsId);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (SubChannel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SubChannel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (GoodsId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodsId);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (SubChannel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubChannel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PayOrderGenRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.GoodsId != 0) {
        GoodsId = other.GoodsId;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.SubChannel.Length != 0) {
        SubChannel = other.SubChannel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            GoodsId = input.ReadInt32();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            SubChannel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PayOrderGenResponse : pb::IMessage<PayOrderGenResponse> {
    private static readonly pb::MessageParser<PayOrderGenResponse> _parser = new pb::MessageParser<PayOrderGenResponse>(() => new PayOrderGenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PayOrderGenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.PayMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayOrderGenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayOrderGenResponse(PayOrderGenResponse other) : this() {
      userID_ = other.userID_;
      goodsId_ = other.goodsId_;
      orderId_ = other.orderId_;
      price_ = other.price_;
      channel_ = other.channel_;
      serverUrl_ = other.serverUrl_;
      subChannel_ = other.subChannel_;
      standbox_ = other.standbox_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayOrderGenResponse Clone() {
      return new PayOrderGenResponse(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "goodsId" field.</summary>
    public const int GoodsIdFieldNumber = 2;
    private int goodsId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodsId {
      get { return goodsId_; }
      set {
        goodsId_ = value;
      }
    }

    /// <summary>Field number for the "orderId" field.</summary>
    public const int OrderIdFieldNumber = 3;
    private long orderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 4;
    private long price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 5;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serverUrl" field.</summary>
    public const int ServerUrlFieldNumber = 6;
    private string serverUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerUrl {
      get { return serverUrl_; }
      set {
        serverUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subChannel" field.</summary>
    public const int SubChannelFieldNumber = 7;
    private string subChannel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubChannel {
      get { return subChannel_; }
      set {
        subChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "standbox" field.</summary>
    public const int StandboxFieldNumber = 8;
    private bool standbox_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Standbox {
      get { return standbox_; }
      set {
        standbox_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PayOrderGenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PayOrderGenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (GoodsId != other.GoodsId) return false;
      if (OrderId != other.OrderId) return false;
      if (Price != other.Price) return false;
      if (Channel != other.Channel) return false;
      if (ServerUrl != other.ServerUrl) return false;
      if (SubChannel != other.SubChannel) return false;
      if (Standbox != other.Standbox) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (GoodsId != 0) hash ^= GoodsId.GetHashCode();
      if (OrderId != 0L) hash ^= OrderId.GetHashCode();
      if (Price != 0L) hash ^= Price.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (ServerUrl.Length != 0) hash ^= ServerUrl.GetHashCode();
      if (SubChannel.Length != 0) hash ^= SubChannel.GetHashCode();
      if (Standbox != false) hash ^= Standbox.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (GoodsId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GoodsId);
      }
      if (OrderId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(OrderId);
      }
      if (Price != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Price);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Channel);
      }
      if (ServerUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ServerUrl);
      }
      if (SubChannel.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SubChannel);
      }
      if (Standbox != false) {
        output.WriteRawTag(64);
        output.WriteBool(Standbox);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (GoodsId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodsId);
      }
      if (OrderId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderId);
      }
      if (Price != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Price);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (ServerUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerUrl);
      }
      if (SubChannel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubChannel);
      }
      if (Standbox != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PayOrderGenResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.GoodsId != 0) {
        GoodsId = other.GoodsId;
      }
      if (other.OrderId != 0L) {
        OrderId = other.OrderId;
      }
      if (other.Price != 0L) {
        Price = other.Price;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.ServerUrl.Length != 0) {
        ServerUrl = other.ServerUrl;
      }
      if (other.SubChannel.Length != 0) {
        SubChannel = other.SubChannel;
      }
      if (other.Standbox != false) {
        Standbox = other.Standbox;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            GoodsId = input.ReadInt32();
            break;
          }
          case 24: {
            OrderId = input.ReadInt64();
            break;
          }
          case 32: {
            Price = input.ReadInt64();
            break;
          }
          case 42: {
            Channel = input.ReadString();
            break;
          }
          case 50: {
            ServerUrl = input.ReadString();
            break;
          }
          case 58: {
            SubChannel = input.ReadString();
            break;
          }
          case 64: {
            Standbox = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaySdkActionRequest : pb::IMessage<PaySdkActionRequest> {
    private static readonly pb::MessageParser<PaySdkActionRequest> _parser = new pb::MessageParser<PaySdkActionRequest>(() => new PaySdkActionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaySdkActionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.PayMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaySdkActionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaySdkActionRequest(PaySdkActionRequest other) : this() {
      userID_ = other.userID_;
      orderId_ = other.orderId_;
      action_ = other.action_;
      channel_ = other.channel_;
      subChannel_ = other.subChannel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaySdkActionRequest Clone() {
      return new PaySdkActionRequest(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "orderId" field.</summary>
    public const int OrderIdFieldNumber = 2;
    private long orderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private global::Proto3.PaySDKAction action_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto3.PaySDKAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 4;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subChannel" field.</summary>
    public const int SubChannelFieldNumber = 5;
    private string subChannel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubChannel {
      get { return subChannel_; }
      set {
        subChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaySdkActionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaySdkActionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (OrderId != other.OrderId) return false;
      if (Action != other.Action) return false;
      if (Channel != other.Channel) return false;
      if (SubChannel != other.SubChannel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (OrderId != 0L) hash ^= OrderId.GetHashCode();
      if (Action != 0) hash ^= Action.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (SubChannel.Length != 0) hash ^= SubChannel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (OrderId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OrderId);
      }
      if (Action != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Action);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Channel);
      }
      if (SubChannel.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubChannel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (OrderId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderId);
      }
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (SubChannel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubChannel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaySdkActionRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.OrderId != 0L) {
        OrderId = other.OrderId;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.SubChannel.Length != 0) {
        SubChannel = other.SubChannel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            OrderId = input.ReadInt64();
            break;
          }
          case 24: {
            action_ = (global::Proto3.PaySDKAction) input.ReadEnum();
            break;
          }
          case 34: {
            Channel = input.ReadString();
            break;
          }
          case 42: {
            SubChannel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaySdkActionResponse : pb::IMessage<PaySdkActionResponse> {
    private static readonly pb::MessageParser<PaySdkActionResponse> _parser = new pb::MessageParser<PaySdkActionResponse>(() => new PaySdkActionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaySdkActionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.PayMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaySdkActionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaySdkActionResponse(PaySdkActionResponse other) : this() {
      userID_ = other.userID_;
      orderId_ = other.orderId_;
      action_ = other.action_;
      items_ = other.items_.Clone();
      price_ = other.price_;
      goodsId_ = other.goodsId_;
      channel_ = other.channel_;
      subChannel_ = other.subChannel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaySdkActionResponse Clone() {
      return new PaySdkActionResponse(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "orderId" field.</summary>
    public const int OrderIdFieldNumber = 2;
    private long orderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private global::Proto3.PaySDKAction action_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto3.PaySDKAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Proto3.ItemData> _repeated_items_codec
        = pb::FieldCodec.ForMessage(34, global::Proto3.ItemData.Parser);
    private readonly pbc::RepeatedField<global::Proto3.ItemData> items_ = new pbc::RepeatedField<global::Proto3.ItemData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto3.ItemData> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 5;
    private long price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "goodsId" field.</summary>
    public const int GoodsIdFieldNumber = 6;
    private int goodsId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoodsId {
      get { return goodsId_; }
      set {
        goodsId_ = value;
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 7;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subChannel" field.</summary>
    public const int SubChannelFieldNumber = 8;
    private string subChannel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubChannel {
      get { return subChannel_; }
      set {
        subChannel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaySdkActionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaySdkActionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (OrderId != other.OrderId) return false;
      if (Action != other.Action) return false;
      if(!items_.Equals(other.items_)) return false;
      if (Price != other.Price) return false;
      if (GoodsId != other.GoodsId) return false;
      if (Channel != other.Channel) return false;
      if (SubChannel != other.SubChannel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (OrderId != 0L) hash ^= OrderId.GetHashCode();
      if (Action != 0) hash ^= Action.GetHashCode();
      hash ^= items_.GetHashCode();
      if (Price != 0L) hash ^= Price.GetHashCode();
      if (GoodsId != 0) hash ^= GoodsId.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (SubChannel.Length != 0) hash ^= SubChannel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (OrderId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OrderId);
      }
      if (Action != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Action);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (Price != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Price);
      }
      if (GoodsId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(GoodsId);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Channel);
      }
      if (SubChannel.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SubChannel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (OrderId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderId);
      }
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (Price != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Price);
      }
      if (GoodsId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoodsId);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (SubChannel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubChannel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaySdkActionResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.OrderId != 0L) {
        OrderId = other.OrderId;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      items_.Add(other.items_);
      if (other.Price != 0L) {
        Price = other.Price;
      }
      if (other.GoodsId != 0) {
        GoodsId = other.GoodsId;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.SubChannel.Length != 0) {
        SubChannel = other.SubChannel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            OrderId = input.ReadInt64();
            break;
          }
          case 24: {
            action_ = (global::Proto3.PaySDKAction) input.ReadEnum();
            break;
          }
          case 34: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 40: {
            Price = input.ReadInt64();
            break;
          }
          case 48: {
            GoodsId = input.ReadInt32();
            break;
          }
          case 58: {
            Channel = input.ReadString();
            break;
          }
          case 66: {
            SubChannel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaySdkCallbackResponse : pb::IMessage<PaySdkCallbackResponse> {
    private static readonly pb::MessageParser<PaySdkCallbackResponse> _parser = new pb::MessageParser<PaySdkCallbackResponse>(() => new PaySdkCallbackResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaySdkCallbackResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto3.PayMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaySdkCallbackResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaySdkCallbackResponse(PaySdkCallbackResponse other) : this() {
      userID_ = other.userID_;
      orderId_ = other.orderId_;
      sdkOrderId_ = other.sdkOrderId_;
      externParam_ = other.externParam_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaySdkCallbackResponse Clone() {
      return new PaySdkCallbackResponse(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private long userID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "orderId" field.</summary>
    public const int OrderIdFieldNumber = 2;
    private long orderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }

    /// <summary>Field number for the "sdk_orderId" field.</summary>
    public const int SdkOrderIdFieldNumber = 3;
    private string sdkOrderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SdkOrderId {
      get { return sdkOrderId_; }
      set {
        sdkOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extern_param" field.</summary>
    public const int ExternParamFieldNumber = 4;
    private string externParam_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternParam {
      get { return externParam_; }
      set {
        externParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaySdkCallbackResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaySdkCallbackResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (OrderId != other.OrderId) return false;
      if (SdkOrderId != other.SdkOrderId) return false;
      if (ExternParam != other.ExternParam) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0L) hash ^= UserID.GetHashCode();
      if (OrderId != 0L) hash ^= OrderId.GetHashCode();
      if (SdkOrderId.Length != 0) hash ^= SdkOrderId.GetHashCode();
      if (ExternParam.Length != 0) hash ^= ExternParam.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserID);
      }
      if (OrderId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OrderId);
      }
      if (SdkOrderId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SdkOrderId);
      }
      if (ExternParam.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExternParam);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserID);
      }
      if (OrderId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderId);
      }
      if (SdkOrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SdkOrderId);
      }
      if (ExternParam.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternParam);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaySdkCallbackResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0L) {
        UserID = other.UserID;
      }
      if (other.OrderId != 0L) {
        OrderId = other.OrderId;
      }
      if (other.SdkOrderId.Length != 0) {
        SdkOrderId = other.SdkOrderId;
      }
      if (other.ExternParam.Length != 0) {
        ExternParam = other.ExternParam;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt64();
            break;
          }
          case 16: {
            OrderId = input.ReadInt64();
            break;
          }
          case 26: {
            SdkOrderId = input.ReadString();
            break;
          }
          case 34: {
            ExternParam = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
